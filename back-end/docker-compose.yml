version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - "8081:8080"
      - "50000:50000"
    container_name: jenkins
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nimbus_network
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nimbus_db
      POSTGRES_USER: nimbus_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-nimbus_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nimbus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nimbus_user -d nimbus_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nimbus-backend
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/nimbus_db
      - SPRING_DATASOURCE_USERNAME=nimbus_user
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-nimbus_password}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - nimbus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  nimbus_network:
    driver: bridge

volumes:
  jenkins_home:
  postgres_data: 